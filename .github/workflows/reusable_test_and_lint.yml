name: Reusable Test & Lint

on: workflow_call

jobs:
  reusable_continuous_integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        id: install
        run: npm ci --legacy-peer-deps

      - name: Code Linting
        id: lint
        run: npm run lint
        continue-on-error: true

      - name: Run the tests
        id: test
        if: steps.lint.outcome != 'failure'
        run: npm test
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          LINT: '${{ steps.lint.outputs.stdout }}'
          TEST: '${{ steps.test.outputs.stdout }}'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `## CI Run on \`${{ matrix.node-version }}\`
            #### Code Lint üñå\`${{ steps.lint.outcome }}\`
            #### Test ‚öôÔ∏è\`${{ steps.test.outcome }}\`

            <details><summary>Code Lint Summary</summary>

            \`\`\`Code Lint\n
            ${process.env.LINT}
            \`\`\`

            </details>

            <details><summary>Test Summary</summary>

            \`\`\`Test\n
            ${process.env.TEST}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # Stops the workflow if lint of test fails
      - name: NPM Lint & Test Status
        if: steps.lint.outcome == 'failure' || steps.test.outcome == 'failure'
        run: exit 1
